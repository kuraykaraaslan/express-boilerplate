// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  USER
  ADMIN
}

model User {
  userId String  @id @default(cuid())
  name   String?

  email String @unique

  verified Boolean @default(false)
  verificationToken String?
  verificationTokenExpires DateTime?

  phone Int?   @unique
  phoneVerified Boolean @default(false)
  phoneVerificationToken String?
  phoneVerificationTokenExpires DateTime?

  password String?
  passwordResetToken String?
  passwordResetTokenExpires DateTime?

  emailChangeAddress String?
  emailChangeToken String?
  emailChangeTokenExpires DateTime?

  phoneChangeNumber Int?
  phoneChangeToken String?
  phoneChangeTokenExpires DateTime?

  language String? @default("en")
  theme String? @default("light")

  OTPEnabled Boolean @default(false)
  OTPCanUseEmail Boolean @default(false)
  OTPCanUsePhone Boolean @default(false)

  sessions Session[]
  roles Role[] @default([USER])
  wallets Wallet[]

  lastLogin DateTime?
  lastEmailSent DateTime?
  lastPhoneSent DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

}

model Session {
  token  String @unique @id
  userId String

  expiresAt DateTime

  // Agent
  browser  String?
  os       String?
  device   String?
  platform String?
  ip       String?

  OTPNeeded Boolean @default(false)

  OTPVerificationPhoneCode String?
  OTPVerificationPhoneCodeExpires DateTime?

  OTPVerificationEmailCode String?
  OTPVerificationEmailCodeExpires DateTime?

  user User @relation(fields: [userId], references: [userId])
}


model Incident {
  logId String @id @default(cuid())

  userId String?
  requestId String?
  sessionId String?

  status String  @default("INFO") // INFO, WARN, ERROR
  message String

  path String?
  ip String?

  createdAt DateTime @default(now())
}

model Wallet {
  walletId String @id @default(cuid())

  userId String
  user User @relation(fields: [userId], references: [userId])

  network String
  memonic String?
  address String
  privateKey String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, network])

}

